{
	"info": {
		"name": "API_Automatic_testing",
		"_postman_id": "2d352920-3557-3926-17e3-304fbf8e8f0a",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://jsonplaceholder.typicode.com/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f162199-d7ec-4075-af5e-431eb39590f3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"check data size is 100\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(100);",
							"});",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "https://jsonplaceholder.typicode.com/posts/1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48094f25-d1fd-48a9-a4f4-a28aea349562",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// check key has ",
							"pm.test(\"Body matches UserId\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"userId\");",
							"});",
							"",
							"pm.test(\"Body matches Id\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Body matches Title\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"title\");",
							"});",
							"",
							"pm.test(\"Body matches body\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"body\");",
							"});",
							"",
							"// check value",
							"pm.test(\"UserId equal is 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.eql(1);",
							"});",
							"",
							"pm.test(\"Id equal is 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(1);",
							"});",
							"",
							"var schema = {",
							"  \"definitions\": {},",
							"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
							"  \"$id\": \"https://jsonplaceholder.typicode.com/posts/1\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"userId\": {",
							"      \"$id\": \"/properties/userId\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Userid Schema\",",
							"      \"description\": \"An explanation about the purpose of this instance.\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        1",
							"      ]",
							"    },",
							"    \"id\": {",
							"      \"$id\": \"/properties/id\",",
							"      \"type\": \"integer\",",
							"      \"title\": \"The Id Schema\",",
							"      \"description\": \"An explanation about the purpose of this instance.\",",
							"      \"default\": 0,",
							"      \"examples\": [",
							"        1",
							"      ]",
							"    },",
							"    \"title\": {",
							"      \"$id\": \"/properties/title\",",
							"      \"type\": \"string\",",
							"      \"title\": \"The Title Schema\",",
							"      \"description\": \"An explanation about the purpose of this instance.\",",
							"      \"default\": \"\",",
							"      \"examples\": [",
							"        \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"",
							"      ]",
							"    },",
							"    \"body\": {",
							"      \"$id\": \"/properties/body\",",
							"      \"type\": \"string\",",
							"      \"title\": \"The Body Schema\",",
							"      \"description\": \"An explanation about the purpose of this instance.\",",
							"      \"default\": \"\",",
							"      \"examples\": [",
							"        \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"",
							"      ]",
							"    }",
							"  }",
							"};",
							"",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    ",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				},
				"description": null
			},
			"response": []
		}
	]
}
